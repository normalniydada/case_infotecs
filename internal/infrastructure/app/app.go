// Package app предоставляет точку входа и основную логику запуска приложения.
// Управляет жизненным циклом приложения, инициализацией и graceful shutdown.
package app

import (
	"context"
	"log"
)

// Start инициализирует и запускает приложение.
// Управляет основным жизненным циклом приложения:
//   - Создает основной контекст с возможностью отмены
//   - Инициализирует зависимости приложения
//   - Запускает HTTP-сервер
//   - Обеспечивает graceful shutdown при завершении
//
// Логика работы:
//  1. Создание контекста для graceful shutdown
//  2. Инициализация всех компонентов приложения
//  3. Запуск HTTP-сервера
//  4. Ожидание сигналов завершения
//  5. Корректное освобождение ресурсов
//
// Особенности:
//   - При ошибке инициализации логирует ошибку и завершает работу
//   - Гарантирует освобождение ресурсов через defer
//   - Поддерживает graceful shutdown через контекст
//
// Пример использования:
//
//	func main() {
//	    app.Start()
//	}
func Start() {
	// Создаем контекст с возможностью отмены для graceful shutdown
	ctx, cancel := context.WithCancel(context.Background())
	defer cancel()

	// Инициализируем приложение
	app, err := setupApplication(ctx)
	if err != nil {
		log.Fatalf("[ERROR] Error during initialization: %v", err)
	}
	defer app.Close() // Гарантируем закрытие ресурсов

	// Запускаем сервер и обработку shutdown
	app.runServer()
	app.serverShutdown(ctx)
}
